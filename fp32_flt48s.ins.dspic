;   ***************************************************************
;   * Copyright (C) 2018, Embed Inc (http://www.embedinc.com)     *
;   *                                                             *
;   * Permission to copy this file is granted as long as this     *
;   * copyright notice is included in its entirety at the         *
;   * beginning of the file, whether the file is copied in whole  *
;   * or in part and regardless of whether other information is   *
;   * added to the copy.                                          *
;   *                                                             *
;   * The contents of this file may be used in any way,           *
;   * commercial or otherwise.  This file is provided "as is",    *
;   * and Embed Inc makes no claims of suitability for a          *
;   * particular purpose nor assumes any liability resulting from *
;   * its use.                                                    *
;   ***************************************************************
;
/if [not [exist "fp32_flt48s_ins"]] then
  /const fp32_flt48s_ins bool = true

  /include "(cog)src/dspic/fp32_flt48u.ins.dspic"

.section .code_fp32_flt48s, code
;*******************************************************************************
;
;   Subroutine FP32_FLT48S
;
;   Convert a 48 bit (3 16-bit word) signed fixed point value to IEEE 32 bit
;   floating point.
;
;   On entry:
;
;     W2:W1:W0  -  Fixed point input value.
;
;     W3  -  Number of fraction bits in the fixed point input value.  This can
;       be negative to indicate the binary point is some bits right of LSB of
;       the fixed point value.
;
;   On return:
;
;     W1:W0  -  IEEE 32 bit floating point value.
;
         glbsub  fp32_flt48s, regf2

         btsc    w2, #15     ;zero or positive ?
         jump    flt48s_neg  ;negative
;
;   The input value is positive.
;
         gcall   fp32_flt48u ;convert as unsigned
         jump    flt48s_leave;
;
;   The input value is negative.
;
flt48s_neg:
         subr    w0, #0, w0  ;flip the sign of the input value
         subbr   w1, #0, w1
         subbr   w2, #0, w2

         gcall   fp32_flt48u ;convert the positive value to floating point

         bset    w1, #15     ;set the sign of the result to negative

flt48s_leave:
         leaverest
  /endif
