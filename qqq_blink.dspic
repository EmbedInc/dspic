;   ***************************************************************
;   * Copyright (C) 2017, Embed Inc (http://www.embedinc.com)     *
;   *                                                             *
;   * Permission to copy this file is granted as long as this     *
;   * copyright notice is included in its entirety at the         *
;   * beginning of the file, whether the file is copied in whole  *
;   * or in part and regardless of whether other information is   *
;   * added to the copy.                                          *
;   *                                                             *
;   * The contents of this file may be used in any way,           *
;   * commercial or otherwise.  This file is provided "as is",    *
;   * and Embed Inc makes no claims of suitability for a          *
;   * particular purpose nor assumes any liability resulting from *
;   * its use.                                                    *
;   ***************************************************************
;
;   This module manages the blinking of a single LED.  The LED is always
;   either fully on or fully off, but can display different blink patterns
;   depending on system conditions.  The LED is driven from a single output
;   line using programmed I/O.
;
;   To support multiple different LEDs in a system, the name of this module
;   is customizable.
;
;   Exported routines:
;
;     name_INIT
;
;       Must be first call into this module.
;
;     name_UPDATE
;
;       Must be called periodically.  It determines the system state, decides
;       what pattern to display, tracks real time, and updates the LED
;       accordingly.  It is intended to be called from the main event loop as
;       a low priority event or during idle time.
;
;   Configuration parameters:
;
;     NAME, string
;
;       The generic name of all symbols exported from this module.  If multiple
;       LEDs are being controlled, then multiple versions of this module can be
;       used, but each must have a different name.
;
;       The default is the same as the module name.  If the module is not
;       renamed from the template, then the default is "ledstat".
;
;     PIN, string
;
;       Name of the /OUTBIT pin that controls the LED.  Setting this line to ON
;       is assumed to enable the LED, and OFF to disable it.  The LED can be
;       wired either way, as long as the polarity in the /OUTBIT command is set
;       accordingly.
;
;       The default is the same as the module name.  If the module is not
;       renamed from the template, then the default is "ledstat".
;
;     NSTBITS, integer
;
;       Number of bits in a pattern.  Whole program memory words are allocated
;       to each pattern.  Since there are 24 bits in a program memory word,
;       NSTBITS should usually be a multiple of 24.  If not, the next full
;       multiple of 24 bits is allocated anyway, but the bits are not used.
;
;       The default is 48 (two program memory words per pattern).
;
;     PATTMS, integer
;
;       The length of a whole pattern in milliseconds.
;
;       The default is 1000 (1 second).
;
/include "qq2.ins.dspic"

;*******************************************************************************
;
;   Configuration constants.
;
/const   name    string = "qq3" ;generic name of exported symbol in this module
/const   pin     string = "qq3" ;name of output pin controlling the LED
/const   nstbits integer = 48 ;number of slices in one display pattern
/const   pattms  integer = 1000 ;length of whole pattern, ms

////////////////////////////////////////////////////////////////////////////////
//
//   Macro PATTNUM
//
//   Determine the number of the pattern to display.  This macro leaves the 0-N
//   pattern number in W0.  W1-W3 may be trashed.
//
/macro pattnum
         mov     #0, w0

havepatt:                    ;W0 contains the 0-N number of the pattern to display
  /endmac
//
////////////////////////////////////////////////////////////////////////////////

/include "(cog)src/dspic/blink.ins.dspic"

;*******************************************************************************
;
;   Display patterns table.
;
;   Each display pattern must be defined here.  Patterns are defined
;   sequentially starting with 0 at TBL_PATT.
;
;   Each pattern is defined with the PATTERN macro.  The parameter to this macro
;   is a series of stars (*) or dashes (-).  A star represents LED on, and a
;   dash LED off.  There must be exactly NSTBITS total characters in the
;   pattern.  Patterns are displayed in left to righ order as defined by the
;   PATTERN macro parameter.
;
tbl_patt:
         pattern ************************------------------------ ;0 - normal operation

.end
